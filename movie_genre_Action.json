[
    {
        "data": {
            "title": "The Creator",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "133"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 7.2,
            "votes": 30469,
            "metascore": 63,
            "plot": "Against the backdrop of a war between humans and robots with artificial intelligence, a former soldier finds the secret weapon, a robot in the form of a young child.",
            "directors": [
                {
                    "data": {
                        "name": "Gareth Edwards"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2284484",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "John David Washington"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0913475",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Madeleine Yuna Voyles"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "12719194",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Gemma Chan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2110418",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Allison Janney"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005049",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNDUyNTIzNDQtYTZmMi00M2FlLTgyZjUtYWViZWNhMDYzMjE4XkEyXkFqcGdeQXVyMTUzMTg2ODkz._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "11858890",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Argylle",
            "state": "Post-production",
            "runtimes": [
                "135"
            ],
            "genres": [
                "Action",
                "Thriller"
            ],
            "plot": "An introverted spy novelist is drawn into the activities of a sinister underground syndicate.",
            "directors": [
                {
                    "data": {
                        "name": "Matthew Vaughn"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0891216",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Dua Lipa"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "7645984",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sofia Boutella"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1154749",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Henry Cavill"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0147147",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bryce Dallas Howard"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0397171",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZDM3YTg4MGUtZmUxNi00YmEyLTllNTctNjYyNjZlZGViNmFhXkEyXkFqcGdeQXVyMTUzMTg2ODkz._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2024,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15009428",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Equalizer 3",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "109"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 7.0,
            "votes": 37620,
            "plot": "Robert McCall finds himself at home in Southern Italy but he discovers his friends are under the control of local crime bosses. As events turn deadly, McCall knows what he has to do: become his friends' protector by taking on the mafia.",
            "directors": [
                {
                    "data": {
                        "name": "Antoine Fuqua"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0298807",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Denzel Washington"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000243",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dakota Fanning"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0266824",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Eugenio Mastrandrea"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5177845",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "David Denman"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0219292",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BODdiMzM2YjctZmU3ZS00MzUwLWJiYTMtMmI2NzIyMTQyOTQ1XkEyXkFqcGdeQXVyODY5NzkyMjA@._V1_UY98_CR5,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "17024450",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Sound of Freedom",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "131"
            ],
            "genres": [
                "Action",
                "Biography",
                "Crime"
            ],
            "rating": 7.8,
            "votes": 67470,
            "plot": "The incredible true story of a former government agent turned vigilante who embarks on a dangerous mission to rescue hundreds of children from traffickers.",
            "directors": [
                {
                    "data": {
                        "name": "Alejandro Monteverde"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1920049",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jim Caviezel"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001029",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Mira Sorvino"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000227",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bill Camp"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0131966",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Cristal Aparicio"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "10750217",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNTAwNWQ1ZjQtZDFmMC00YjNlLWFlNjItMjJlYzZkMjJlNzkyXkEyXkFqcGdeQXVyNzc0MTgzMzU@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "7599146",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Meg 2: The Trench",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "116"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Horror"
            ],
            "rating": 5.1,
            "votes": 53907,
            "plot": "A research team encounters multiple threats while exploring the depths of the ocean, including a malevolent mining operation.",
            "directors": [
                {
                    "data": {
                        "name": "Ben Wheatley"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1296554",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jason Statham"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005458",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jing Wu"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0943104",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Shuya Sophia Cai"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8528988",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Cliff Curtis"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0193295",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTM2NTU1ZTktNjc4YS00NjNhLWE4NmYtOTM2YjFjOGUzNmYzXkEyXkFqcGdeQXVyODE5NzE3OTE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "9224104",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Mission: Impossible - Dead Reckoning Part One",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "163"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Thriller"
            ],
            "rating": 7.9,
            "votes": 145894,
            "metascore": 81,
            "plot": "Ethan Hunt and his IMF team must track down a dangerous weapon before it falls into the wrong hands.",
            "directors": [
                {
                    "data": {
                        "name": "Christopher McQuarrie"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0003160",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Tom Cruise"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000129",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Hayley Atwell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2017943",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ving Rhames"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000609",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Simon Pegg"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0670408",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BYzFiZjc1YzctMDY3Zi00NGE5LTlmNWEtN2Q3OWFjYjY1NGM2XkEyXkFqcGdeQXVyMTUyMTUzNjQ0._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "9603212",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Gran Turismo",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "134"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 7.3,
            "votes": 40597,
            "plot": "Based on the unbelievable, inspiring true story of a team of underdogs - a struggling, working-class gamer, a failed former race car driver, and an idealistic motorsport exec - who risk it all to take on the most elite sport in the world.",
            "directors": [
                {
                    "data": {
                        "name": "Neill Blomkamp"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0088955",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "David Harbour"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1092086",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Orlando Bloom"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0089217",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Archie Madekwe"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5994098",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Takehiro Hira"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3042346",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTI1YjFmN2UtOWZhOC00MjkwLTg2ZjgtNDQ5NDQ3YWNmNGRkXkEyXkFqcGdeQXVyMTAxNzQ1NzI@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "4495098",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Expend4bles",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "103"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Thriller"
            ],
            "rating": 5.2,
            "votes": 9224,
            "plot": "Armed with every weapon they can get their hands on, the Expendables are the world's last line of defense and the team that gets called when all other options are off the table.",
            "directors": [
                {
                    "data": {
                        "name": "Scott Waugh"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0915304",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jason Statham"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005458",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "50 Cent"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1265067",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Megan Fox"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1083271",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dolph Lundgren"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000185",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMDFhYjc2NmUtNDBlOC00NDE5LTk5YWYtYmM4ZmMxNTUxMGNjXkEyXkFqcGdeQXVyMjM4NTM5NDY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "3291150",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Jawan",
            "certificates": [
                "Not Rated"
            ],
            "runtimes": [
                "169"
            ],
            "genres": [
                "Action",
                "Thriller"
            ],
            "rating": 7.5,
            "votes": 61222,
            "plot": "A high-octane action thriller which outlines the emotional journey of a man who is set to rectify the wrongs in the society.",
            "directors": [
                {
                    "data": {
                        "name": "Atlee"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5961051",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Shah Rukh Khan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0451321",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Nayanthara"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1521381",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Vijay Sethupathi"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4043111",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Deepika Padukone"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2138653",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BOWI5NmU3NTUtOTZiMS00YzA1LThlYTktNDJjYTU5NDFiMDUxXkEyXkFqcGdeQXVyMTUzNjEwNjM2._V1_UY98_CR5,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15354916",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "PAW Patrol: The Mighty Movie",
            "certificates": [
                "PG"
            ],
            "runtimes": [
                "88"
            ],
            "genres": [
                "Animation",
                "Action",
                "Adventure"
            ],
            "rating": 6.1,
            "votes": 1380,
            "plot": "A magical meteor crash lands in Adventure City and gives the PAW Patrol pups superpowers, transforming them into The Mighty Pups",
            "directors": [
                {
                    "data": {
                        "name": "Cal Brunker"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2117510",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Mckenna Grace"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5085683",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Taraji P. Henson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0378245",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Marsai Martin"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6343162",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Christian Convery"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8087548",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMGI4NTNlODItMGJlZi00OTIwLTlkM2ItMWFkZjJhZDIzMDc3XkEyXkFqcGdeQXVyMTEyNzQ1MTk0._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15837338",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Blue Beetle",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "127"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Sci-Fi"
            ],
            "rating": 6.1,
            "votes": 51212,
            "metascore": 61,
            "plot": "An alien scarab chooses Jaime Reyes to be its symbiotic host, bestowing the recent college graduate with a suit of armor that's capable of extraordinary powers, forever changing his destiny as he becomes the superhero known as Blue Beetle.",
            "directors": [
                {
                    "data": {
                        "name": "Angel Manuel Soto"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3924049",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Xolo Maridue\u00f1a"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4927704",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bruna Marquezine"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1367490",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Becky G"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3121384",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dami\u00e1n Alc\u00e1zar"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0017343",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMmY1ODUzZGItNDllOS00MDBhLTg4NmUtYjU4YjUxMGNlYmMwXkEyXkFqcGdeQXVyODE5NzE3OTE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "9362930",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Teenage Mutant Ninja Turtles: Mutant Mayhem",
            "certificates": [
                "PG"
            ],
            "runtimes": [
                "99"
            ],
            "genres": [
                "Animation",
                "Action",
                "Adventure"
            ],
            "rating": 7.3,
            "votes": 43102,
            "metascore": 74,
            "plot": "The film follows the Turtle brothers as they work to earn the love of New York City while facing down an army of mutants.",
            "directors": [
                {
                    "data": {
                        "name": "Jeff Rowe"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6676487",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Kyler Spears"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5859016",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Micah Abbey"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "9368660",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Shamon Brown Jr."
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8366356",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Nicolas Cantu"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "7751235",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Brady Noon"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4054776",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BYzE4MTllZTktMTIyZS00Yzg1LTg1YzAtMWQwZTZkNjNkODNjXkEyXkFqcGdeQXVyMTUzMTg2ODkz._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "8589698",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Khufiya",
            "certificates": [
                "TV-MA"
            ],
            "runtimes": [
                "157"
            ],
            "genres": [
                "Action",
                "Biography",
                "Crime"
            ],
            "rating": 6.1,
            "votes": 1874,
            "plot": "Krishna Mehra who is an operative at Indian spy agency known as R&AW. She is assigned to track down the mole selling India's defense secrets, while all along grappling with her dual identity as a spy and a lover.",
            "directors": [
                {
                    "data": {
                        "name": "Vishal Bhardwaj"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0080235",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Tabu"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0007102",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ali Fazal"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3170495",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Wamiqa Gabbi"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3844346",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Azmeri Haque Badhon"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "7969682",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMWU1YzY3YjgtYzcwZS00NGQ1LTlhNmQtNjM0ZTJkOGM3NWY1XkEyXkFqcGdeQXVyMTk1OTQ5ODE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15433600",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "John Wick: Chapter 4",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "169"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 7.8,
            "votes": 283593,
            "metascore": 78,
            "plot": "John Wick uncovers a path to defeating The High Table. But before he can earn his freedom, Wick must face off against a new enemy with powerful alliances across the globe and forces that turn old friends into foes.",
            "directors": [
                {
                    "data": {
                        "name": "Chad Stahelski"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0821432",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Keanu Reeves"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000206",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Laurence Fishburne"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000401",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "George Georgiou"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1745190",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Lance Reddick"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0714698",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMDExZGMyOTMtMDgyYi00NGIwLWJhMTEtOTdkZGFjNmZiMTEwXkEyXkFqcGdeQXVyMjM4NTM5NDY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "10366206",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Covenant",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "123"
            ],
            "genres": [
                "Action",
                "Drama",
                "Thriller"
            ],
            "rating": 7.5,
            "votes": 128123,
            "metascore": 63,
            "plot": "During the war in Afghanistan, a local interpreter risks his own life to carry an injured sergeant across miles of grueling terrain.",
            "directors": [
                {
                    "data": {
                        "name": "Guy Ritchie"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005363",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jake Gyllenhaal"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0350453",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dar Salim"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1502469",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sean Sagar"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4727272",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jason Wong"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3438484",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNmQzOWZhOTMtZTcxNC00MTdkLWEwYmUtOWVmOTFhNTdkNjRkXkEyXkFqcGdeQXVyODk2NDQ3MTA@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "4873118",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Spider-Man: Across the Spider-Verse",
            "certificates": [
                "PG"
            ],
            "runtimes": [
                "140"
            ],
            "genres": [
                "Animation",
                "Action",
                "Adventure"
            ],
            "rating": 8.7,
            "votes": 273392,
            "metascore": 86,
            "plot": "Miles Morales catapults across the Multiverse, where he encounters a team of Spider-People charged with protecting its very existence. When the heroes clash on how to handle a new threat, Miles must redefine what it means to be a hero.",
            "directors": [
                {
                    "data": {
                        "name": "Joaquim Dos Santos"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1690966",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Kemp Powers"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5358492",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Justin K. Thompson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1042511",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Shameik Moore"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4271336",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Hailee Steinfeld"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2794962",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Brian Tyree Henry"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3109964",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Luna Lauren Velez"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0904967",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMzI0NmVkMjEtYmY4MS00ZDMxLTlkZmEtMzU4MDQxYTMzMjU2XkEyXkFqcGdeQXVyMzQ0MzA0NTM@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "9362722",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Dungeons & Dragons: Honor Among Thieves",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "134"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Comedy"
            ],
            "rating": 7.3,
            "votes": 190039,
            "metascore": 72,
            "plot": "A charming thief and a band of unlikely adventurers embark on an epic quest to retrieve a lost relic, but things go dangerously awry when they run afoul of the wrong people.",
            "directors": [
                {
                    "data": {
                        "name": "John Francis Daley"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0197855",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jonathan Goldstein"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0326246",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Chris Pine"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1517976",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michelle Rodriguez"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0735442",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Reg\u00e9-Jean Page"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2074546",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Justice Smith"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6819854",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZWM5MTQ3NDMtNGFiMS00Y2E5LWE2ZTUtNzM5MTcyZjM3ODRiXkEyXkFqcGdeQXVyMDM2NDM2MQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "2906216",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Guardians of the Galaxy Vol. 3",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "150"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Comedy"
            ],
            "rating": 7.9,
            "votes": 328524,
            "metascore": 64,
            "plot": "Still reeling from the loss of Gamora, Peter Quill rallies his team to defend the universe and one of their own - a mission that could mean the end of the Guardians if not successful.",
            "directors": [
                {
                    "data": {
                        "name": "James Gunn"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0348181",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Chris Pratt"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0695435",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Chukwudi Iwuji"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1030244",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bradley Cooper"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0177896",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Pom Klementieff"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2962353",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMDgxOTdjMzYtZGQxMS00ZTAzLWI4Y2UtMTQzN2VlYjYyZWRiXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "6791350",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Indiana Jones and the Dial of Destiny",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "154"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Sci-Fi"
            ],
            "rating": 6.7,
            "votes": 131923,
            "plot": "Archaeologist Indiana Jones races against time to retrieve a legendary artifact that can change the course of history.",
            "directors": [
                {
                    "data": {
                        "name": "James Mangold"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0003506",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Harrison Ford"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000148",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Phoebe Waller-Bridge"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3564817",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Antonio Banderas"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000104",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Karen Allen"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000261",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BY2M0ZGEwMGQtNzMxOC00OTU2LWExZmUtMTA5N2RhMDZlY2JiXkEyXkFqcGdeQXVyODE5NzE3OTE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1462764",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Dune",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "155"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 8.0,
            "votes": 719109,
            "metascore": 74,
            "gross": 108327830,
            "plot": "A noble family becomes embroiled in a war for control over the galaxy's most valuable asset while its heir becomes troubled by visions of a dark future.",
            "directors": [
                {
                    "data": {
                        "name": "Denis Villeneuve"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0898288",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Timoth\u00e9e Chalamet"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3154303",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Rebecca Ferguson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0272581",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Zendaya"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3918035",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Oscar Isaac"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1209966",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BN2FjNmEyNWMtYzM0ZS00NjIyLTg5YzYtYThlMGVjNzE1OGViXkEyXkFqcGdeQXVyMTkxNjUyNQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2021,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1160419",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Hunger Games: The Ballad of Songbirds and Snakes",
            "state": "Post-production",
            "certificates": [
                "PG13"
            ],
            "runtimes": [
                "165"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "plot": "Coriolanus Snow mentors and develops feelings for the female District 12 tribute during the 10th Hunger Games.",
            "directors": [
                {
                    "data": {
                        "name": "Francis Lawrence"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1349376",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Rachel Zegler"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "10399505",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Hunter Schafer"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "9476408",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Peter Dinklage"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0227759",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Tom Blyth"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3880241",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BOTZmMmY2MzctMjU2Yy00YjJlLTk1NjAtY2U4MmMxOWZkZWY4XkEyXkFqcGdeQXVyMjM4NTM5NDY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "10545296",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Muzzle",
            "runtimes": [
                "100"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 5.5,
            "votes": 523,
            "plot": "After his dog is killed in Skid Row, Jake Rosser plummets deep into a sinister underworld to uncover the truth about who may be responsible.",
            "directors": [
                {
                    "data": {
                        "name": "John Stalberg Jr."
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1226069",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Aaron Eckhart"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001173",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Stephen Lang"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0002332",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Penelope Mitchell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3241414",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Nick Searcy"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0780678",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BOTVkNjNkMjgtZTM0ZS00MDczLTk5ODgtZGRkNzg5ZTE2MzEyXkEyXkFqcGdeQXVyMjQ3ODM2Njc@._V1_UY98_CR3,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "17663876",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Equalizer",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "132"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 7.2,
            "votes": 400194,
            "gross": 101530738,
            "plot": "A man who believes he has put his mysterious past behind him cannot stand idly by when he meets a young girl under the control of ultra-violent Russian gangsters.",
            "directors": [
                {
                    "data": {
                        "name": "Antoine Fuqua"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0298807",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Denzel Washington"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000243",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Marton Csokas"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0190744",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Chlo\u00eb Grace Moretz"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1631269",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "David Harbour"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1092086",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTQ2MzE2NTk0NF5BMl5BanBnXkFtZTgwOTM3NTk1MjE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2014,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "0455944",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Toxic Avenger",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "102"
            ],
            "genres": [
                "Action",
                "Comedy",
                "Horror"
            ],
            "rating": 5.8,
            "votes": 206,
            "metascore": 66,
            "plot": "A horrible toxic accident transforms downtrodden janitor, Winston Gooze into a new evolution of hero: The Toxic Avenger.",
            "directors": [
                {
                    "data": {
                        "name": "Macon Blair"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0086301",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jacob Tremblay"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5016878",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Kevin Bacon"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000102",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Elijah Wood"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000704",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Peter Dinklage"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0227759",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMGMxMDFkY2UtNTYzMC00MTQzLTlmYjQtN2YxZjFiMzUyY2Q4XkEyXkFqcGdeQXVyMzg0MjA5OQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1633359",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Flash",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "144"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Fantasy"
            ],
            "rating": 6.7,
            "votes": 178276,
            "plot": "Barry Allen uses his super speed to change the past, but his attempt to save his family creates a world without super heroes, forcing him to race for his life in order to save the future.",
            "directors": [
                {
                    "data": {
                        "name": "Andy Muschietti"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0615592",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Ezra Miller"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3009232",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michael Keaton"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000474",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sasha Calle"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8567338",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michael Shannon"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0788335",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZWE2ZWE5MDQtMTJlZi00MTVjLTkxOTgtNmNiYjg2NDIxN2NhXkEyXkFqcGdeQXVyMTUzMTg2ODkz._V1_UX67_CR0,0,67,98_AL_.jpg",
            "imdbIndex": "I",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "0439572",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Beekeeper",
            "state": "Completed",
            "certificates": [
                "R"
            ],
            "genres": [
                "Action",
                "Thriller"
            ],
            "plot": "In The Beekeeper, one man's brutal campaign for vengeance takes on national stakes after he is revealed to be a former operative of a powerful and clandestine organization known as \"Beekeepers\".",
            "directors": [
                {
                    "data": {
                        "name": "David Ayer"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0043742",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jason Statham"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005458",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Josh Hutcherson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1242688",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Minnie Driver"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000378",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jeremy Irons"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000460",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZjQwYjU3OTYtMWVhMi00N2Y2LWEzMDgtMzViN2U4NWI1NmI3XkEyXkFqcGdeQXVyODk2NDQ3MTA@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2024,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15314262",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Batman",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "176"
            ],
            "genres": [
                "Action",
                "Crime",
                "Drama"
            ],
            "rating": 7.8,
            "votes": 736008,
            "metascore": 72,
            "gross": 369345583,
            "plot": "When a sadistic serial killer begins murdering key political figures in Gotham, Batman is forced to investigate the city's hidden corruption and question his family's involvement.",
            "directors": [
                {
                    "data": {
                        "name": "Matt Reeves"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0716257",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Robert Pattinson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1500155",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Zo\u00eb Kravitz"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2368789",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jeffrey Wright"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0942482",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Colin Farrell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0268199",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMDdmMTBiNTYtMDIzNi00NGVlLWIzMDYtZTk3MTQ3NGQxZGEwXkEyXkFqcGdeQXVyMzMwOTU5MDk@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2022,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1877830",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Meg",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "113"
            ],
            "genres": [
                "Action",
                "Horror",
                "Sci-Fi"
            ],
            "rating": 5.6,
            "votes": 199174,
            "gross": 143005856,
            "plot": "A group of scientists exploring the Marianas Trench encounter the largest marine predator that has ever existed - the Megalodon.",
            "directors": [
                {
                    "data": {
                        "name": "Jon Turteltaub"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005509",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Jason Statham"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005458",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bingbing Li"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0508356",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Rainn Wilson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0933988",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Cliff Curtis"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0193295",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTAxMGRmODYtM2NkYS00ZGRlLWE1MWItYjI1MzIwNjQwN2RiXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2018,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "4779682",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Fast X",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "141"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Crime"
            ],
            "rating": 5.8,
            "votes": 97998,
            "plot": "Dom Toretto and his family are targeted by the vengeful son of drug kingpin Hernan Reyes.",
            "directors": [
                {
                    "data": {
                        "name": "Louis Leterrier"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0504642",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Vin Diesel"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0004874",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michelle Rodriguez"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0735442",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jason Statham"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005458",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jordana Brewster"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0108287",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNzZmOTU1ZTEtYzVhNi00NzQxLWI5ZjAtNWNhNjEwY2E3YmZjXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "5433140",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "65",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "93"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 5.4,
            "votes": 73665,
            "plot": "An astronaut crash lands on a mysterious planet only to discover he's not alone.",
            "directors": [
                {
                    "data": {
                        "name": "Scott Beck"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1399714",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Bryan Woods"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1456816",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Adam Driver"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3485845",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ariana Greenblatt"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "7567556",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Chloe Coleman"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5668548",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Nika King"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1519739",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNDgwNzc4MGYtOWMwMi00YjExLWIzMGEtMGQxMzA2NmExNzAxXkEyXkFqcGdeQXVyMTA3MDk2NDg2._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "12261776",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Dark Knight",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "152"
            ],
            "genres": [
                "Action",
                "Crime",
                "Drama"
            ],
            "rating": 9.0,
            "votes": 2788179,
            "metascore": 84,
            "gross": 534858444,
            "plot": "When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, Batman must accept one of the greatest psychological and physical tests of his ability to fight injustice.",
            "directors": [
                {
                    "data": {
                        "name": "Christopher Nolan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0634240",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Christian Bale"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000288",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Heath Ledger"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005132",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Aaron Eckhart"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001173",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michael Caine"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000323",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2008,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "0468569",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Killer",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "118"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Crime"
            ],
            "rating": 7.3,
            "votes": 888,
            "metascore": 70,
            "plot": "After a fateful near-miss, an assassin battles his employers, and himself, on an international manhunt he insists isn't personal.",
            "directors": [
                {
                    "data": {
                        "name": "David Fincher"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000399",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Michael Fassbender"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1055413",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Tilda Swinton"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0842770",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Charles Parnell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0663174",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Arliss Howard"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0397124",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZGJkMDUwZWQtYTMzMS00NTg5LWE1ZTYtOTVhMDI4NGI1YjMyXkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "imdbIndex": "II",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1136617",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Infinite",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "106"
            ],
            "genres": [
                "Action",
                "Sci-Fi",
                "Thriller"
            ],
            "rating": 5.5,
            "votes": 57400,
            "plot": "A man discovers that his hallucinations are actually visions from past lives.",
            "directors": [
                {
                    "data": {
                        "name": "Antoine Fuqua"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0298807",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Mark Wahlberg"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000242",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Chiwetel Ejiofor"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0252230",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sophie Cookson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5824400",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dylan O'Brien"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3729721",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZTU5MmY0ZjctYTNlOS00MDIyLWJkZTAtNzBiOTkyNWI5MGY2XkEyXkFqcGdeQXVyNTc4MjczMTM@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2021,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "6654210",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Napoleon",
            "state": "Completed",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "158"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Biography"
            ],
            "plot": "The film takes a personal look at Napoleon Bonaparte's origins, and his swift, ruthless climb to emperor viewed through the prism of his addictive, and often volatile, relationship with his wife and one true love, Josephine.",
            "directors": [
                {
                    "data": {
                        "name": "Ridley Scott"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000631",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Vanessa Kirby"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3948952",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Joaquin Phoenix"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001618",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ludivine Sagnier"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0756203",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Rupert Everett"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000391",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZWIzNDAxMTktMDMzZS00ZjJmLTlhNjYtOGUxYmZlYzVmOGE4XkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "13287846",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "John Wick",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "101"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 7.4,
            "votes": 715423,
            "metascore": 68,
            "gross": 43037835,
            "plot": "An ex-hitman comes out of retirement to track down the gangsters who killed his dog and stole his car.",
            "directors": [
                {
                    "data": {
                        "name": "Chad Stahelski"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0821432",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "David Leitch"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0500610",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Keanu Reeves"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000206",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Michael Nyqvist"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0638824",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Alfie Allen"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0654295",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Willem Dafoe"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000353",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTU2NjA1ODgzMF5BMl5BanBnXkFtZTgwMTM2MTI4MjE@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2014,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "2911666",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Machine",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "112"
            ],
            "genres": [
                "Action",
                "Comedy"
            ],
            "rating": 5.8,
            "votes": 11705,
            "plot": "Bert's drunken past catches up with him 20 years down the road when he and his father are kidnapped by those Bert wronged 20 years ago while drunk on a college semester abroad in Russia.",
            "directors": [
                {
                    "data": {
                        "name": "Peter Atencio"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1534595",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Bert Kreischer"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0470679",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Mark Hamill"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000434",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jimmy Tatro"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5555161",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Iva Babic"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5246957",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNjAwMzk1YzEtOGJjOS00Mjg3LTllNGItMGYxNWI0ZTI1MTk3XkEyXkFqcGdeQXVyMDA4NzMyOA@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "imdbIndex": "I",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "11040844",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Ballerina",
            "certificates": [
                "TV-MA"
            ],
            "runtimes": [
                "92"
            ],
            "genres": [
                "Action",
                "Thriller"
            ],
            "rating": 6.3,
            "votes": 1819,
            "plot": "Grieving the loss of a best friend she couldn't protect, an ex-bodyguard sets out to fulfill her dear friend's last wish: sweet revenge.",
            "directors": [
                {
                    "data": {
                        "name": "Chung-Hyun Lee"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8066994",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Kim Ji-hoon"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3050595",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jeon Jong-seo"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "9311474",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Park Yu-rim"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "12719478",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BODQ4MTk1NzMtODBmYi00MWI1LThiNWUtYTA0ZGE5ZDZkOTkxXkEyXkFqcGdeQXVyMTEzMTI1Mjk3._V1_UX67_CR0,0,67,98_AL_.jpg",
            "imdbIndex": "III",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "26350277",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Silent Night",
            "state": "Completed",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "104"
            ],
            "genres": [
                "Action"
            ],
            "plot": "A grieving father enacts his long-awaited revenge against a ruthless gang on Christmas Eve.",
            "directors": [
                {
                    "data": {
                        "name": "John Woo"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000247",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Joel Kinnaman"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1172478",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Catalina Sandino Moreno"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1503432",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Kid Cudi"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3264596",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Harold Torres"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2386306",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZTk1ODM0NGMtOWQ5Zi00OWE4LTgwZTItNDFhYjcxMWI1NjQ3XkEyXkFqcGdeQXVyMTMzNzIyNDc1._V1_UY98_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15799866",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Everything Everywhere All at Once",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "139"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Comedy"
            ],
            "rating": 7.8,
            "votes": 482196,
            "metascore": 81,
            "gross": 72861480,
            "plot": "A middle-aged Chinese immigrant is swept up into an insane adventure in which she alone can save existence by exploring other universes and connecting with the lives she could have led.",
            "directors": [
                {
                    "data": {
                        "name": "Daniel Kwan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3453283",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Daniel Scheinert"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3215397",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Michelle Yeoh"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000706",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Stephanie Hsu"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3513533",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jamie Lee Curtis"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000130",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ke Huy Quan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0702841",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BYTdiOTIyZTQtNmQ1OS00NjZlLWIyMTgtYzk5Y2M3ZDVmMDk1XkEyXkFqcGdeQXVyMTAzMDg4NzU0._V1_UY98_CR0,0,67,98_AL_.jpg",
            "year": 2022,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "6710474",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Dune: Part Two",
            "state": "Completed",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "150"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "plot": "Paul Atreides unites with Chani and the Fremen while seeking revenge against the conspirators who destroyed his family.",
            "directors": [
                {
                    "data": {
                        "name": "Denis Villeneuve"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0898288",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Rebecca Ferguson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0272581",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Florence Pugh"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6073955",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Timoth\u00e9e Chalamet"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3154303",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Zendaya"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3918035",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BODI0YjNhNjUtYjM0My00MTUwLWFlYTMtMWI2NGUzYjNjNGQzXkEyXkFqcGdeQXVyMDM2NDM2MQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2024,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "15239678",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Gladiator",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "155"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 8.5,
            "votes": 1567112,
            "metascore": 67,
            "gross": 187705427,
            "plot": "A former Roman General sets out to exact vengeance against the corrupt emperor who murdered his family and sent him into slavery.",
            "directors": [
                {
                    "data": {
                        "name": "Ridley Scott"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000631",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Russell Crowe"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000128",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Joaquin Phoenix"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001618",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Connie Nielsen"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001567",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Oliver Reed"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001657",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMDliMmNhNDEtODUyOS00MjNlLTgxODEtN2U3NzIxMGVkZTA1L2ltYWdlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2000,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "0172495",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Lord of the Rings: The Fellowship of the Ring",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "178"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Drama"
            ],
            "rating": 8.8,
            "votes": 1949427,
            "metascore": 92,
            "gross": 315544750,
            "plot": "A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle-earth from the Dark Lord Sauron.",
            "directors": [
                {
                    "data": {
                        "name": "Peter Jackson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0001392",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Elijah Wood"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000704",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ian McKellen"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0005212",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Orlando Bloom"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0089217",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sean Bean"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000293",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BN2EyZjM3NzUtNWUzMi00MTgxLWI0NTctMzY4M2VlOTdjZWRiXkEyXkFqcGdeQXVyNDUzOTQ5MjY@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2001,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "0120737",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Inception",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "148"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Sci-Fi"
            ],
            "rating": 8.8,
            "votes": 2474697,
            "metascore": 74,
            "gross": 292576195,
            "plot": "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O., but his tragic past may doom the project and his team to disaster.",
            "directors": [
                {
                    "data": {
                        "name": "Christopher Nolan"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0634240",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Leonardo DiCaprio"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000138",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Joseph Gordon-Levitt"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0330687",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Elliot Page"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0680983",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ken Watanabe"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0913822",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2010,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1375666",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Transformers: Rise of the Beasts",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "127"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Sci-Fi"
            ],
            "rating": 6.1,
            "votes": 83218,
            "plot": "During the '90s, a new faction of Transformers - the Maximals - join the Autobots as allies in the battle for Earth.",
            "directors": [
                {
                    "data": {
                        "name": "Steven Caple Jr."
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "4023702",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Anthony Ramos"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6588867",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dominique Fishback"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "6195774",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Luna Lauren Velez"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0904967",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Dean Scott Vazquez"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "10773795",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZTNiNDA4NmMtNTExNi00YmViLWJkMDAtMDAxNmRjY2I2NDVjXkEyXkFqcGdeQXVyMDM2NDM2MQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "5090568",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Avatar: The Way of Water",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "192"
            ],
            "genres": [
                "Action",
                "Adventure",
                "Fantasy"
            ],
            "rating": 7.6,
            "votes": 462555,
            "metascore": 67,
            "gross": 659682302,
            "plot": "Jake Sully lives with his newfound family formed on the extrasolar moon Pandora. Once a familiar threat returns to finish what was previously started, Jake must work with Neytiri and the army of the Na'vi race to protect their home.",
            "directors": [
                {
                    "data": {
                        "name": "James Cameron"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000116",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Sam Worthington"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0941777",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Zoe Saldana"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0757855",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Sigourney Weaver"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000244",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Stephen Lang"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0002332",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BYjhiNjBlODctY2ZiOC00YjVlLWFlNzAtNTVhNzM1YjI1NzMxXkEyXkFqcGdeQXVyMjQxNTE1MDA@._V1_UY98_CR0,0,67,98_AL_.jpg",
            "year": 2022,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1630029",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Desperation Road",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "112"
            ],
            "genres": [
                "Action",
                "Thriller"
            ],
            "rating": 5.7,
            "votes": 369,
            "plot": "A Southern Noir thriller, set in a tough-and-tumble Mississippi town where a woman and her young daughter are caught in the crossfire when whiskey, guns, and the desire for revenge violently intersect.",
            "directors": [
                {
                    "data": {
                        "name": "Nadine Crocker"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "3206051",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Mel Gibson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000154",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Willa Fitzgerald"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2560618",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ryan Hurst"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0403652",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Garrett Hedlund"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1330560",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTQ0MWFmZWEtYjk4Yy00NTFhLWE5MzQtOTA2ZmIyZjViMDJlXkEyXkFqcGdeQXVyOTg4MDYyNw@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "14633464",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Retribution",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "91"
            ],
            "genres": [
                "Action",
                "Crime",
                "Drama"
            ],
            "rating": 5.3,
            "votes": 9835,
            "plot": "A bank executive receives a bomb threat while driving his children to school that his car will explode if they stop and get out.",
            "directors": [
                {
                    "data": {
                        "name": "Nimr\u00f3d Antal"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0030735",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Liam Neeson"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000553",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Noma Dumezweni"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1282920",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Lilly Aspell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "8412222",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jack Champion"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5607823",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BNTEwYTMyNmUtNmU5OS00NTg2LTk4ZjEtOGJlZWViMWFlMjY1XkEyXkFqcGdeQXVyMDM2NDM2MQ@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "imdbIndex": "I",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "6906292",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Retirement Plan",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "103"
            ],
            "genres": [
                "Action",
                "Comedy",
                "Crime"
            ],
            "rating": 5.1,
            "votes": 2157,
            "plot": "When Ashley and her young daughter Sarah get caught up in a criminal enterprise that puts their lives at risk, she turns to estranged father Matt, currently living the life of a retired beach bum in the Cayman Islands.",
            "directors": [
                {
                    "data": {
                        "name": "Tim Brown"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2303666",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Nicolas Cage"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000115",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ashley Greene"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2230865",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Thalia Campbell"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "11164361",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ron Perlman"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000579",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BYTYyM2NmM2QtZTY4My00NDYxLTgyMTctY2ZhOWRjZjk1NjY5XkEyXkFqcGdeQXVyNTE0NDY2Ng@@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2023,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "14827638",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "Top Gun: Maverick",
            "certificates": [
                "PG-13"
            ],
            "runtimes": [
                "130"
            ],
            "genres": [
                "Action",
                "Drama"
            ],
            "rating": 8.3,
            "votes": 633734,
            "metascore": 78,
            "gross": 718732821,
            "plot": "After thirty years, Maverick is still pushing the envelope as a top naval aviator, but must confront ghosts of his past when he leads TOP GUN's elite graduates on a mission that demands the ultimate sacrifice from those chosen to fly it.",
            "directors": [
                {
                    "data": {
                        "name": "Joseph Kosinski"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "2676052",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Tom Cruise"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000129",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Jennifer Connelly"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000124",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Miles Teller"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "1886602",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Val Kilmer"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000174",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BZWYzOGEwNTgtNWU3NS00ZTQ0LWJkODUtMmVhMjIwMjA1ZmQwXkEyXkFqcGdeQXVyMjkwOTAyMDU@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2022,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "1745960",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    },
    {
        "data": {
            "title": "The Equalizer 2",
            "certificates": [
                "R"
            ],
            "runtimes": [
                "121"
            ],
            "genres": [
                "Action",
                "Crime",
                "Thriller"
            ],
            "rating": 6.7,
            "votes": 181411,
            "gross": 102084362,
            "plot": "Robert McCall serves an unflinching justice for the exploited and oppressed, but how far will he go when that is someone he loves?",
            "directors": [
                {
                    "data": {
                        "name": "Antoine Fuqua"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0298807",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cast": [
                {
                    "data": {
                        "name": "Denzel Washington"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0000243",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Pedro Pascal"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0050959",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Ashton Sanders"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "5480894",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                },
                {
                    "data": {
                        "name": "Orson Bean"
                    },
                    "myID": null,
                    "notes": "",
                    "titlesRefs": {},
                    "namesRefs": {},
                    "charactersRefs": {},
                    "modFunct": {},
                    "current_info": [],
                    "infoset2keys": {},
                    "key2infoset": {},
                    "_Container__role": null,
                    "personID": "0004730",
                    "myName": "",
                    "billingPos": null,
                    "accessSystem": "http",
                    "keys_tomodify": {
                        "mini biography": null,
                        "spouse": null,
                        "quotes": null,
                        "other works": null,
                        "salary history": null,
                        "trivia": null,
                        "trade mark": null,
                        "news": null,
                        "books": null,
                        "biographical movies": null,
                        "portrayed in": null,
                        "where now": null,
                        "interviews": null,
                        "article": null,
                        "biography from leonard maltin's movie encyclopedia": null
                    },
                    "_roleIsPerson": false,
                    "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
                }
            ],
            "cover url": "https://m.media-amazon.com/images/M/MV5BMTU2OTYzODQyMF5BMl5BanBnXkFtZTgwNjU3Njk5NTM@._V1_UX67_CR0,0,67,98_AL_.jpg",
            "year": 2018,
            "kind": "movie"
        },
        "myID": null,
        "notes": "",
        "titlesRefs": {},
        "namesRefs": {},
        "charactersRefs": {},
        "modFunct": {},
        "current_info": [],
        "infoset2keys": {},
        "key2infoset": {},
        "_Container__role": null,
        "movieID": "3766354",
        "myTitle": "",
        "accessSystem": "http",
        "keys_tomodify": {
            "plot": null,
            "trivia": null,
            "alternate versions": null,
            "goofs": null,
            "quotes": null,
            "dvd": null,
            "laserdisc": null,
            "news": null,
            "soundtrack": null,
            "crazy credits": null,
            "business": null,
            "supplements": null,
            "video review": null,
            "faqs": null
        },
        "_roleIsPerson": false,
        "_roleClass": "{'__module__': 'imdb.Character', '__doc__': 'A Character.\\n\\n    Every information about a character can be accessed as::\\n\\n        characterObject[\\'information\\']\\n\\n    to get a list of the kind of information stored in a\\n    Character object, use the keys() method; some useful aliases\\n    are defined (as \"also known as\" for the \"akas\" key);\\n    see the keys_alias dictionary.\\n    ', 'default_info': ('main', 'filmography', 'biography'), 'keys_alias': {'mini biography': 'biography', 'bio': 'biography', 'character biography': 'biography', 'character biographies': 'biography', 'biographies': 'biography', 'character bio': 'biography', 'aka': 'akas', 'also known as': 'akas', 'alternate names': 'akas', 'personal quotes': 'quotes', 'keys': 'keywords', 'keyword': 'keywords'}, 'keys_tomodify_list': ('biography', 'quotes'), 'cmpFunct': <function cmpPeople at 0x00000178D641AA20>, '_init': <function Character._init at 0x00000178D60D5260>, '_reset': <function Character._reset at 0x00000178D643DB20>, 'set_name': <function Character.set_name at 0x00000178D643DBC0>, '_additional_keys': <function Character._additional_keys at 0x00000178D643DC60>, '_getitem': <function Character._getitem at 0x00000178D643DD00>, 'getID': <function Character.getID at 0x00000178D643DDA0>, '__bool__': <function Character.__bool__ at 0x00000178D643DE40>, '__contains__': <function Character.__contains__ at 0x00000178D643DEE0>, 'isSameName': <function Character.isSameName at 0x00000178D643DF80>, 'isSameCharacter': <function Character.isSameName at 0x00000178D643DF80>, '__deepcopy__': <function Character.__deepcopy__ at 0x00000178D643E020>, '__repr__': <function Character.__repr__ at 0x00000178D643E0C0>, '__str__': <function Character.__str__ at 0x00000178D643E160>, 'summary': <function Character.summary at 0x00000178D643E200>}"
    }
]